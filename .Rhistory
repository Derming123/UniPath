combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
rownames(human_null_data)
rownames(Pval)
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix)
combp <- combine(human_markers,expression_matrix,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
head(combp_ref[,1:3])
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval,thr=10)
head(combp_ref[,1:3])
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix)
combp <- combine(human_markers,expression_matrix,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
head(ad[,1:2])
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
head(ad[,1:2])
head(ad[1:10,1:2])
View(ad)
colSums(ad)
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix)
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
head(ad[,1:3])
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval,thr=10)
Pval1 = binorm(expression_matrix)
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(expression_matrix),Pval1,thr=10)
scores = adjust(combp,combp_ref)
ad1 = scores$adjpvalog
head(ad1[,1:3])
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data,method=2)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix,method=2)
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
ad1 = scores$adjpvalog
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data,method=2)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix,method=2)
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
ad1 = scores$adjpvalog
head(ad1[,1:3])
View(ad1)
colSums(ad1)
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=1,q1=0.25,q2=0.90)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=1,q1=0.25,q2=0.90)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
ad1 = scores$adjpvalog
View(ad1)
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=2,q1=0.25,q2=0.90)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.90)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
View(ad)
colSums(ad)
colSums(ad1)
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=2,q1=0.25,q2=0.90)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.90)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
library(UniPath)
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=2,q1=0.25,q2=0.90)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.90)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
View(ad)
colSums(ad1)
ad1 = scores$adjpvalog
colSums(ad1)
data("data/c2.cp.v6.1.symbols.RData")
data("c2.cp.v6.1.symbols.RData")
data("c2.cp.v6.1.symbols")
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=2,q1=0.25,q2=0.70)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.70)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
##Combining of p-values for gene expression data matrix
combp = combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1,thr=2)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
colSums(ad)
library(UniPath)
data("human_null_model")
data("GSE81861")
data("human_markers_scATACseq")
Pval = binorm(human_null_data,method=2)
combp_ref <- combine(human_markers,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(data,method=2)
combp <- combine(human_markers,data,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
library(UniPath)
data("human_null_model")
data("GSE81861")
data("human_markers_scATACseq")
Pval = binorm(human_null_data,method=2)
combp_ref <- combine(human_markers,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(data,method=2)
combp <- combine(human_markers,data,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
head(ad)
colSums(ad)
library(UniPath)
data("human_null_model")
data("GSE81861")
x = log2(100*data + 1) ;
xdim = dim(x) ;
xpval = matrix(1 , xdim[1] , xdim[2],dimnames=list(toupper(rownames(x)),colnames(x)))
for (i in 1: xdim[2])
{
pos1 = which(x[,i] > 0) ;
}
pos = which(quantile(x[pos1,i]) > q1 | quantile(x[pos1,i]) <q2)
pos = which(quantile(x[pos1,i]) > 0.25 | quantile(x[pos1,i]) < 0.90)
x = log2(100*data + 1) ;
xdim = dim(x) ;
xpval = matrix(1 , xdim[1] , xdim[2],dimnames=list(toupper(rownames(x)),colnames(x)))
for (i in 1: xdim[2])
{
pos1 = which(x[,i] > 0) ;
pos = which(quantile(x[pos1,i]) > 0.25 | quantile(x[pos1,i]) < 0.90)
meannz = mean(x[pos, i])
sdnz = sd(x[pos,i]) ;
xpval[pos, i] =  (1 - pnorm(x[pos, i], meannz, sdnz)) ;
}
View(xpval)
pos = which(quantile(x[pos1,i]) > 0.25 | quantile(x[pos1,i]) < 0.90)
meannz = mean(x[pos, i])
i
View(data)
xdim[2]
x = log2(100*data + 1) ;
xdim = dim(x) ;
xpval = matrix(1 , xdim[1] , xdim[2],dimnames=list(toupper(rownames(x)),colnames(x)))
for (i in 1: xdim[2])
{
pos1 = which(x[,i] > 0) ;
pos = which(quantile(x[pos1,i]) > 0.25 | quantile(x[pos1,i]) < 0.90)
meannz = mean(x[pos, i])
sdnz = sd(x[pos,i]) ;
xpval[pos, i] =  (1 - pnorm(x[pos, i], meannz, sdnz)) ;
}
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
rownames(expression_matrix) = toupper(rownames(expression_matrix))
Pval = binorm(mouse_null_data,method=2)
combp_ref <- combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval)
Pval1 = binorm(expression_data,methos=2)
combp <- combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1)
scores = adjust(combp,combp_ref)
Pval1 = binorm(expression_data,method=2)
combp <- combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1)
scores = adjust(combp,combp_ref)
scores = scores$adjpvaraw
head(scores[,1:3])
head(combp[,1:3])
head(Pval[,1:3])
head(Pval1[,1:3])
head(combp_ref[,1:3])
colSums(combp_ref)
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
rownames(expression_matrix) = toupper(rownames(expression_matrix))
Pval = binorm(mouse_null_data,method)
combp_ref <- combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval)
Pval1 = binorm(expression_data,method=2)
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
rownames(expression_matrix) = toupper(rownames(expression_matrix))
Pval = binorm(mouse_null_data)
combp_ref <- combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval)
Pval1 = binorm(expression_data,method=2)
head(Pval[,1:2])
head(combp_ref[,1:2])
head(Pval1[,1:2])
combp <- combine(c5.bp.v6.0.symbols,expression_data,rownames(expression_data),Pval1)
head(combp[,1:2])
head(Pval1[,1:2])
rownames(Pval1)
tail(rownames(Pval1))
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
rownames(expression_matrix) = toupper(rownames(expression_matrix))
Pval = binorm(mouse_null_data,method=2)
combp_ref <- combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval)
Pval1 = binorm(expression_matrix,method=2)
combp <- combine(c5.bp.v6.0.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
head(combp_ref[,1:2])
rownames(Pval)
head(Pval[,1:2])
head(mouse_null_data[,1:2])
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols.gmt")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
data("c5.bp.v6.0.symbols")
setwd("G:\\MCA_AuCell\\Uterus")
library(UniPath)
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
gene_data_1 <- read.table("Uterus_umi.csv",sep=",",stringsAsFactors=F,header=T)
gene_data_1= gene_data_1[,1:100]
expression_matrix = as.matrix(gene_data_1[,2:ncol(gene_data_1)])
gnames = as.matrix(gene_data_1[,1])
rownames(expression_matrix) = gnames
#rownames(expression_matrix) = toupper(rownames(expression_matrix))
Pval = binorm(mouse_null_data)
combp_ref <- combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval)
Pval1 = binorm(expression_matrix)
combp <- combine(c5.bp.v6.0.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
head(scores$adjpvaraw[,1:2])
x = log2(100*expression_matrix + 1) ;
xdim = dim(x) ;
xpval = matrix(1 , xdim[1] , xdim[2],dimnames=list(toupper(rownames(x)),colnames(x)))
for (i in 1: xdim[2])
{
pos1 = which(x[,i] > 0) ;
pos = which(quantile(x[pos1,i]) > 0.25 | quantile(x[pos1,i]) < 0.90)
meannz = mean(x[pos, i])
sdnz = sd(x[pos,i]) ;
xpval[pos, i] =  (1 - pnorm(x[pos, i], meannz, sdnz)) ;
}
which(quantile(x[pos1,i]) > 0.25
)
quantile(x[pos1,1])
quantile(x[pos1,1]) > 0.25
quantile(x[pos1,1]) <0.90
pos = which(quantile(x[pos1,1]) > 0.25 | quantile(x[pos1,1]) < 0.90)
pos
quantile(x[pos,1], 0.95)
n= which(x[pos1,i] < quantile(x[pos,1], 0.95)]
n= which(x[pos1,i] < quantile(x[pos,1], 0.95)
)
quantile(x[pos,1], 0.95)
x[pos1,i]
d = x[pos1,i]
d[,1]
d = as.matrix(d[pos1,i])
d = as.matrix(d[pos1,1])
d = as.matrix(x[pos1,1])
View(d)
d = as.data.frame(x[pos1,1])
d[d$`x[pos1, 1]` < quantile(d$`x[pos1, 1]`, 0.95), ]
pos = which(quantile(d) > 0.25 | quantile(d) < 0.90)
pos = which(quantile(d) > 0.25)
pos = which(quantile(d[,1]) > 0.25)
pos = which(quantile(d[,1] > 0.25) | quantile(d[,1] < 0.95))
mean = mean(d)
mean = mean(d[pos,])
x = log2(100*expression_matrix + 1) ;
xdim = dim(x) ;
xpval = matrix(1 , xdim[1] , xdim[2],dimnames=list(toupper(rownames(x)),colnames(x)))
for (i in 1: xdim[2])
{
pos1 = which(x[,i] > 0) ;
pos = which(quantile(x[pos1,i] > 0.25) | quantile(x[pos1,i] < 0.90))
meannz = mean(x[pos, i])
sdnz = sd(x[pos,i]) ;
xpval[pos, i] =  (1 - pnorm(x[pos, i], meannz, sdnz)) ;
}
View(xpval)
x = log2(100*expression_matrix + 1) ;
xdim = dim(x) ;
i
d = as.data.frame(x[pos1,99])
pos = which(quantile(d[,1] > 0.25) | quantile(d[,1] < 0.95))
mean(d)
mean(d[,1])
x[pos,]
x[pos,99]
d
d = as.data.frame(x[pos1,99])
pos = which(quantile(d[,1] > 0.25) | quantile(d[,1] < 0.95))
ld[pos,]
d[pos,]
mean(d[pos,]
)
pos1 = which(x[,i] > 0) ;
x[pos1,i]
quantile(x[pos1,i] > 0.25
)
quantile(d[,1] > 0.25
)
######
library(UniPath)
##Load all data files
data("mouse_null_model")
data("c5.bp.v6.0.symbols")
data("GSE52583_expression_data")
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=2,q1=0.25,q2=0.70)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.70)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
head(combp_ref[,1:2])
colSums(combp_ref)
head(Pval[,1:2])
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=1,q1=0.25,q2=0.70)
##Converting mouse null data into p-values
Pval = binorm(mouse_null_data,method=1,q1=0.25,q2=0.90)
head(Pval[,1:2])
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=2,q1=0.25,q2=0.90)
##Converting gene expression data into p-values
Pval1 = binorm(expression_data,method=1,q1=0.25,q2=0.90)
##Combining of p-values for null model data matrix
combp_ref = combine(c5.bp.v6.0.symbols,mouse_null_data,rownames(mouse_null_data),Pval,thr=2)
head(combp_ref)
head(combp_ref[,1:2])
library(UniPath)
data("human_null_model")
data("GSE81861")
data("human_markers_scATACseq")
Pval = binorm(human_null_data,method=2)
combp_ref <- combine(human_markers,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(data,method=2)
combp <- combine(human_markers,data,rownames(data),Pval1)
head(combp[,1:2])
library(UniPath)
data("human_null_model")
data("c2.cp.v6.1.symbols")
data <- read.csv("G:\\GSE81861\\final_rca_fpkm_data.csv",sep=",",stringsAsFactors=F,header=T)
expression_matrix = as.matrix(data[,2:ncol(data)])
gnames = as.matrix(data[,1])
rownames(expression_matrix) = gnames
Pval = binorm(human_null_data)
combp_ref <- combine(c2.cp.v6.1.symbols,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(expression_matrix)
combp <- combine(c2.cp.v6.1.symbols,expression_matrix,rownames(expression_matrix),Pval1)
scores = adjust(combp,combp_ref)
ad1 = scores$adjpvalog
##First set up a working directory
setwd(system.file("extdata", package="UniPath"))
globalaccess = global_access("GSE116248_peaks.txt","reference_peaks_human.txt","global_accessibility_score_human.csv")
setwd("G:\\GSE116248")
cmd = nearest_gene("nearestGenes.pl","GSE116248_peaks.txt","refseq-hg19.txt","GSE116248_foreground")
##system call
system(cmd)
##First set up a working directory
setwd(system.file("extdata", package="UniPath"))
cmd = nearest_gene("nearestGenes.pl","GSE116248_peaks.txt","refseq-hg19.txt","GSE116248_foreground")
##system call
system(cmd)
data("c2.cp.v6.1.symbols")
scores = runGO(c2.cp.v6.1.symbols,"background_human","GSE116248_imputed_count.csv",method=1,"globalaccess","GSE116248_foreground",promoters = FALSE,dist=1000000,threshold=1.25)
head(scores$binomial[,1:2])
cmd = nearest_gene("nearestGenes.pl","GSE116248_peaks.txt","refseq-hg19.txt","G:\\Final_UniPath_files_26_7_2019\\test_codes\\GSE116248_foreground")
##system call
system(cmd)
adjpva = -log2(scores$hypergeometeric+.0001)
distclust = dist_clust(adjpva,3)
dist = distclust$distance
clusters = distclust$clusters
index = index(adjpva,5)
KNN = KNN(adjpva,index,clusters)
class = class1(clusters,KNN)
distance = distance(dist,class,clusters)
corr_mst = minimum_spanning_tree(distance)
vertex_color = c("red","green","blue")
cell_labels = data.frame(c(rep("0days",96),rep("3days",95),rep("6days",97)))
UniPath::mst.plot.mod(corr_mst, vertex.color = vertex_color[cell_labels[,1]],mst.edge.col="black",bg="white",layout.function="layout.kamada.kawai",v.size = 3,e.size=0.005,mst.e.size = 0.005)
legend("topright", legend = sort(unique(cell_labels[,1])) , col = vertex_color,pch=20, box.lty=0,cex=1,pt.cex=2,horiz=F)
library(UniPath)
library(UniPath)
data("human_null_model")
data("GSE81861")
data("human_markers_scATACseq")
Pval = binorm(human_null_data)
combp_ref <- combine(human_markers,human_null_data,rownames(human_null_data),Pval)
Pval1 = binorm(data)
combp <- combine(human_markers,data,rownames(data),Pval1)
scores = adjust(combp,combp_ref)
ad = scores$adjpvalog
View(ad)
